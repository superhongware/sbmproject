var SBMPS=angular.module("SBMPS",["ui.router","starter.services"]);SBMPS.controller("spCtrl",["$scope","$http","SBMJSONP",function(t,o){o.get("testdata/productshow.json").success(function(o){t.show=o,t.show.current=0,console.log(t.show.current)})}]).factory("p_s",["$swipe",function(){function t(){this.startX=0,this.startY=0,this.startT=0,this.currentpage=0,this.pagemovetype=1,this.spwidth=$(window).width(),this.spheight=$(window).height(),this.pagesize=0,this.pagemoving=0}return t}]).directive("showBox",function(){return{templateUrl:"templates/ps/page1.html",link:function(){$("body").on("touchstart",function(t){console.log(t)}),$("body").on("touchmove",function(t){console.log(t)}),$("body").on("touchend",function(t){console.log(t)})}}});
angular.module("service.encryption",[]).factory("hex_md5",function(){function r(r){return i(t(u(r),r.length*C))}function t(r,t){r[t>>5]|=128<<t%32,r[(t+64>>>9<<4)+14]=t;for(var n=1732584193,h=-271733879,u=-1732584194,i=271733878,d=0;d<r.length;d+=16){var C=n,g=h,A=u,S=i;n=e(n,h,u,i,r[d+0],7,-680876936),i=e(i,n,h,u,r[d+1],12,-389564586),u=e(u,i,n,h,r[d+2],17,606105819),h=e(h,u,i,n,r[d+3],22,-1044525330),n=e(n,h,u,i,r[d+4],7,-176418897),i=e(i,n,h,u,r[d+5],12,1200080426),u=e(u,i,n,h,r[d+6],17,-1473231341),h=e(h,u,i,n,r[d+7],22,-45705983),n=e(n,h,u,i,r[d+8],7,1770035416),i=e(i,n,h,u,r[d+9],12,-1958414417),u=e(u,i,n,h,r[d+10],17,-42063),h=e(h,u,i,n,r[d+11],22,-1990404162),n=e(n,h,u,i,r[d+12],7,1804603682),i=e(i,n,h,u,r[d+13],12,-40341101),u=e(u,i,n,h,r[d+14],17,-1502002290),h=e(h,u,i,n,r[d+15],22,1236535329),n=o(n,h,u,i,r[d+1],5,-165796510),i=o(i,n,h,u,r[d+6],9,-1069501632),u=o(u,i,n,h,r[d+11],14,643717713),h=o(h,u,i,n,r[d+0],20,-373897302),n=o(n,h,u,i,r[d+5],5,-701558691),i=o(i,n,h,u,r[d+10],9,38016083),u=o(u,i,n,h,r[d+15],14,-660478335),h=o(h,u,i,n,r[d+4],20,-405537848),n=o(n,h,u,i,r[d+9],5,568446438),i=o(i,n,h,u,r[d+14],9,-1019803690),u=o(u,i,n,h,r[d+3],14,-187363961),h=o(h,u,i,n,r[d+8],20,1163531501),n=o(n,h,u,i,r[d+13],5,-1444681467),i=o(i,n,h,u,r[d+2],9,-51403784),u=o(u,i,n,h,r[d+7],14,1735328473),h=o(h,u,i,n,r[d+12],20,-1926607734),n=a(n,h,u,i,r[d+5],4,-378558),i=a(i,n,h,u,r[d+8],11,-2022574463),u=a(u,i,n,h,r[d+11],16,1839030562),h=a(h,u,i,n,r[d+14],23,-35309556),n=a(n,h,u,i,r[d+1],4,-1530992060),i=a(i,n,h,u,r[d+4],11,1272893353),u=a(u,i,n,h,r[d+7],16,-155497632),h=a(h,u,i,n,r[d+10],23,-1094730640),n=a(n,h,u,i,r[d+13],4,681279174),i=a(i,n,h,u,r[d+0],11,-358537222),u=a(u,i,n,h,r[d+3],16,-722521979),h=a(h,u,i,n,r[d+6],23,76029189),n=a(n,h,u,i,r[d+9],4,-640364487),i=a(i,n,h,u,r[d+12],11,-421815835),u=a(u,i,n,h,r[d+15],16,530742520),h=a(h,u,i,n,r[d+2],23,-995338651),n=c(n,h,u,i,r[d+0],6,-198630844),i=c(i,n,h,u,r[d+7],10,1126891415),u=c(u,i,n,h,r[d+14],15,-1416354905),h=c(h,u,i,n,r[d+5],21,-57434055),n=c(n,h,u,i,r[d+12],6,1700485571),i=c(i,n,h,u,r[d+3],10,-1894986606),u=c(u,i,n,h,r[d+10],15,-1051523),h=c(h,u,i,n,r[d+1],21,-2054922799),n=c(n,h,u,i,r[d+8],6,1873313359),i=c(i,n,h,u,r[d+15],10,-30611744),u=c(u,i,n,h,r[d+6],15,-1560198380),h=c(h,u,i,n,r[d+13],21,1309151649),n=c(n,h,u,i,r[d+4],6,-145523070),i=c(i,n,h,u,r[d+11],10,-1120210379),u=c(u,i,n,h,r[d+2],15,718787259),h=c(h,u,i,n,r[d+9],21,-343485551),n=f(n,C),h=f(h,g),u=f(u,A),i=f(i,S)}return Array(n,h,u,i)}function n(r,t,n,e,o,a){return f(h(f(f(t,r),f(e,a)),o),n)}function e(r,t,e,o,a,c,f){return n(t&e|~t&o,r,t,a,c,f)}function o(r,t,e,o,a,c,f){return n(t&o|e&~o,r,t,a,c,f)}function a(r,t,e,o,a,c,f){return n(t^e^o,r,t,a,c,f)}function c(r,t,e,o,a,c,f){return n(e^(t|~o),r,t,a,c,f)}function f(r,t){var n=(65535&r)+(65535&t),e=(r>>16)+(t>>16)+(n>>16);return e<<16|65535&n}function h(r,t){return r<<t|r>>>32-t}function u(r){for(var t=Array(),n=(1<<C)-1,e=0;e<r.length*C;e+=C)t[e>>5]|=(r.charCodeAt(e/C)&n)<<e%32;return t}function i(r){for(var t=d?"0123456789ABCDEF":"0123456789abcdef",n="",e=0;e<4*r.length;e++)n+=t.charAt(r[e>>2]>>e%4*8+4&15)+t.charAt(r[e>>2]>>e%4*8&15);return n}var d=0,C=8;return r}).factory("base64",function(){function r(){_keyStr="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",this.encode=function(r){var t,n,e,o,a,c,f,h="",u=0;for(r=_utf8_encode(r);u<r.length;)t=r.charCodeAt(u++),n=r.charCodeAt(u++),e=r.charCodeAt(u++),o=t>>2,a=(3&t)<<4|n>>4,c=(15&n)<<2|e>>6,f=63&e,isNaN(n)?c=f=64:isNaN(e)&&(f=64),h=h+_keyStr.charAt(o)+_keyStr.charAt(a)+_keyStr.charAt(c)+_keyStr.charAt(f);return h},this.decode=function(r){var t,n,e,o,a,c,f,h="",u=0;for(r=r.replace(/[^A-Za-z0-9\+\/\=]/g,"");u<r.length;)o=_keyStr.indexOf(r.charAt(u++)),a=_keyStr.indexOf(r.charAt(u++)),c=_keyStr.indexOf(r.charAt(u++)),f=_keyStr.indexOf(r.charAt(u++)),t=o<<2|a>>4,n=(15&a)<<4|c>>2,e=(3&c)<<6|f,h+=String.fromCharCode(t),64!=c&&(h+=String.fromCharCode(n)),64!=f&&(h+=String.fromCharCode(e));return h=_utf8_decode(h)},_utf8_encode=function(r){r=r.replace(/\r\n/g,"\n");for(var t="",n=0;n<r.length;n++){var e=r.charCodeAt(n);128>e?t+=String.fromCharCode(e):e>127&&2048>e?(t+=String.fromCharCode(e>>6|192),t+=String.fromCharCode(63&e|128)):(t+=String.fromCharCode(e>>12|224),t+=String.fromCharCode(e>>6&63|128),t+=String.fromCharCode(63&e|128))}return t},_utf8_decode=function(r){for(var t="",n=0,e=0,o=0;n<r.length;)e=r.charCodeAt(n),128>e?(t+=String.fromCharCode(e),n++):e>191&&224>e?(o=r.charCodeAt(n+1),t+=String.fromCharCode((31&e)<<6|63&o),n+=2):(o=r.charCodeAt(n+1),c3=r.charCodeAt(n+2),t+=String.fromCharCode((15&e)<<12|(63&o)<<6|63&c3),n+=3);return t}}return new r});
angular.module("starter.services",["service.encryption"]).factory("myCookie",function(){return{add:function(e,t,n){var r=e+"="+escape(t);if(n>0){var o=new Date;o.setTime(o.getTime()+3600*n*1e3),r=r+"; expires="+o.toGMTString()}document.cookie=r},get:function(e){for(var t=document.cookie,n=t.split("; "),r=0;r<n.length;r++){var o=n[r].split("=");if(o[0]==e)return unescape(o[1])}return""},"delete":function(e){var t=new Date;t.setTime(t.getTime()-1e4),document.cookie=e+"=v; expires="+t.toGMTString()}}}).factory("dateFormat",function(){return function(e,t){var n={"M+":e.getMonth()+1,"d+":e.getDate(),"h+":e.getHours(),"m+":e.getMinutes(),"s+":e.getSeconds(),"q+":Math.floor((e.getMonth()+3)/3),S:e.getMilliseconds()};/(y+)/.test(t)&&(t=t.replace(RegExp.$1,(e.getFullYear()+"").substr(4-RegExp.$1.length)));for(var r in n)new RegExp("("+r+")").test(t)&&(t=t.replace(RegExp.$1,1==RegExp.$1.length?n[r]:("00"+n[r]).substr((""+n[r]).length)));return t}}).factory("loginCheck",["$state","myCookie","base64",function(e,t,n){return function(){return t.get("orgName")?n.decode(t.get("orgName")):void e.go("login")}}]).factory("hrefGo",function(){return function(e){location.href=e}}).factory("SBMJSONP",["jsonpURL","systemdata",function(e,t){return function(n,r){var o=t(r),a="http://jira.hongware.cn:8084/openApi/dyncSoftBanana/app/"+n;return{url:e(a,o)}}}]).factory("SBMPOST",["postURL","systemdata",function(e,t){return function(n,r){var o=t(r);o=e(o);var a="http://jira.hongware.cn:8084/openApi/dyncSoftBanana/app/"+n;return{url:a,data:o}}}]).factory("jsonpURL",function(){return function(e,t){e+="?";for(var n in t)e+=n+"="+t[n]+"&";return e+"callBack=JSON_CALLBACK"}}).factory("postURL",function(){return function(e){var t="";for(var n in e)t+=n+"="+e[n]+"&";return t.substr(0,t.length-1)}}).factory("systemdata",["hex_md5","base64",function(e,t){return function(n){if("undefined"==typeof n.method)throw"SBMJSONP或SBMPOST的data参数里没有method,赶紧查下接口文档";n="object"==typeof n?n:{};var r=new Date,o={nick:"softbanana",name:"softbanana",timestamp:parseInt(r.getTime()/1e3).toString(),format:"json"},a=t.encode(o.nick)+t.encode(n.method)+t.encode(o.timestamp)+t.encode(o.name)+t.encode(o.format);return o.sign=e(a),$.extend(o,n)}}]);
//# sourceMappingURL=data:application/json;base64,